
import sys
username = input("Enter username: ")
password = input("Enter password: ")
taken_names = ["Jake", "Dan", "Matt", "James", ]

if username == "James" and password == "JV":  # my account
    #    print("name ok")
    # elif username != "James:":
    #    print("incorrect username")

    print("Login sucessfull")  # indented as a function result

if username != "James" or password != "JV":  # predetermined user
    print("Incorrect details, press ENTER to sign up!")
signup = input("")
new_username = input("Enter new username: ")
if new_username == taken_names[0]:
    print("Username taken, Please try again ")
else:
    print("Username accepted!")

new_password = input("Enter new password: ")

def login():
    print("Password to short!")

if len(new_password) < 6:
    login()  # function being called if condition is met
    new_password = input("Enter new password: ")  # functions repeat password process until correct

if len(new_password) > 6:  # if users password
    print("Password accepted! press ENTER to sign in!")

login = input("")
new_user = input("Enter username: ")
new_pass = input("Enter password: ")  # new user now logging in

if new_user == new_username and new_pass == new_password:
    print("              Welcome " + new_user + "!")  # string + string
elif new_user != new_username and new_pass != new_password:
    print("Incorrect details, sign in failed!")
    exit() # cancels program

taken_names.append(new_user)  # allows for new user name to be added to list
# USER ENCRYPTION
def encrypt(new_pass):  # encrypting password that user inputs
    encryption = ""  # encryption is string
    for letter in new_pass:  # for letter in variable/ new username. letter is a variable ive defined,
        if letter in "abcdefghijklmnopqrstuvwxyz":  # if letters = alphabet change to * so then whole username = *
            encryption = encryption + "*"  # encryption letters become *
        else:
            encryption = encryption + letter  # Else left as normal string but wont ever happen as passwords have them
    return encryption
    # return value from function`
# print(encrypt(new_user)) - TEST TO SEE IF FUNC WORKS
# system_information = open('info.py','w')
# system_information.write(new_user)
# system_information.close()

from info import *
# class users_data:   # OBJECTS (Seperate document)
#    def __init__(self, name, password, fee,): # init function is being called, values being stored from program, parameters that are passed in.
#        self.name = name  # means actual objects name = name to passed in
#        self.password = password # values that are inputted are assigned to a object
#        self.fee = fee # cost of membership
#
#
# class Card_Info:
#    def __init__(self, card, card2, card3, card4): # have to write self as frst argument(paramenter being passed in)
#        self.card = card
#        self.card2 = card2
#        self.card3 = card3
#        self.card4 = card4

new_account = users_data(new_user, new_pass, "10.99 P/M") # stating new accounts inputs to function on info page
print("Thankyou for signing up, Full membership starts at" + " " + new_account.fee)# new.account fee is value being stored in class from our input
member = input("Become a member? Press ENTER to apply: ")
# card_details = []

card_details = input("First 4 credit/Debit card numbers: ") # card details-4 are each input of users card info
card_details2 = input("Second 4 credit/Debit card numbers: ")
card_details3 = input("Third 4 credit/Debit card numbers: ")
card_details4 = input("Fourth 4 credit/Debit card numbers: ")vee
newcardvar = Card_Info(card_details, card_details2, card_details3, card_details4) # Card_info class has this parameters being passsed into it

print(newcardvar.card)
print("data type of card_details:",type(card_details)) # type() returns class type of my object/used in debugging
